worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Basic HTTP settings
    default_type application/octet-stream;

    # DNS resolver for container names
    resolver 127.0.0.11 valid=30s ipv6=off;
    resolver_timeout 10s;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Common proxy headers for all locations
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Common sub-filter settings
    sub_filter_once off;
    sub_filter_types text/html text/css text/javascript application/javascript;

    # Grafana Dashboard (metrics.localhost) - no Basic Auth
    server {
        listen 80;
        server_name metrics.localhost;

        location / {
            # No Basic Auth here, as Grafana has its own authentication
            set $upstream_grafana grafana;
            proxy_pass http://$upstream_grafana:3000;
        }
    }

    # Spark Master UI (spark.localhost)
    server {
        listen 80;
        server_name spark.localhost;

        location / {
            set $upstream_spark_master spark-master;
            proxy_pass http://$upstream_spark_master:8090;

            # Redirect internal service names to external URLs
            sub_filter 'http://spark-master:' 'http://spark.localhost';
            sub_filter 'http://spark-worker-1:' 'http://worker-1.localhost';
            sub_filter 'http://spark-worker-2:' 'http://worker-2.localhost';
            sub_filter 'http://spark-worker-3:' 'http://worker-3.localhost';
            sub_filter 'http://data-processor:' 'http://processor.localhost';

            # Remove ports from all URLs
            sub_filter ':8090' '';
            sub_filter ':8091' '';
            sub_filter ':8092' '';
            sub_filter ':8093' '';
            sub_filter ':4040' '';

            # Enable response rewriting
            proxy_set_header Accept-Encoding "";
        }
    }

    # Spark Worker 1 UI
    server {
        listen 80;
        server_name worker-1.localhost;

        location / {
            set $upstream_worker1 spark-worker-1;
            proxy_pass http://$upstream_worker1:8091;

            # Redirect internal service names to external URLs
            sub_filter 'http://spark-master:' 'http://spark.localhost';
            sub_filter 'http://spark-worker-1:' 'http://worker-1.localhost';
            sub_filter 'http://spark-worker-2:' 'http://worker-2.localhost';
            sub_filter 'http://spark-worker-3:' 'http://worker-3.localhost';
            sub_filter 'http://data-processor:' 'http://processor.localhost';

            # Remove ports from all URLs
            sub_filter ':8090' '';
            sub_filter ':8091' '';
            sub_filter ':8092' '';
            sub_filter ':8093' '';
            sub_filter ':4040' '';

            # Enable response rewriting
            proxy_set_header Accept-Encoding "";
        }
    }

    # Spark Worker 2 UI
    server {
        listen 80;
        server_name worker-2.localhost;

        location / {
            set $upstream_worker2 spark-worker-2;
            proxy_pass http://$upstream_worker2:8092;

            # Redirect internal service names to external URLs
            sub_filter 'http://spark-master:' 'http://spark.localhost';
            sub_filter 'http://spark-worker-1:' 'http://worker-1.localhost';
            sub_filter 'http://spark-worker-2:' 'http://worker-2.localhost';
            sub_filter 'http://spark-worker-3:' 'http://worker-3.localhost';
            sub_filter 'http://data-processor:' 'http://processor.localhost';

            # Remove ports from all URLs
            sub_filter ':8090' '';
            sub_filter ':8091' '';
            sub_filter ':8092' '';
            sub_filter ':8093' '';
            sub_filter ':4040' '';

            # Enable response rewriting
            proxy_set_header Accept-Encoding "";
        }
    }

    # Spark Worker 3 UI
    server {
        listen 80;
        server_name worker-3.localhost;

        location / {
            set $upstream_worker3 spark-worker-3;
            proxy_pass http://$upstream_worker3:8093;

            # Redirect internal service names to external URLs
            sub_filter 'http://spark-master:' 'http://spark.localhost';
            sub_filter 'http://spark-worker-1:' 'http://worker-1.localhost';
            sub_filter 'http://spark-worker-2:' 'http://worker-2.localhost';
            sub_filter 'http://spark-worker-3:' 'http://worker-3.localhost';
            sub_filter 'http://data-processor:' 'http://processor.localhost';

            # Remove ports from all URLs
            sub_filter ':8090' '';
            sub_filter ':8091' '';
            sub_filter ':8092' '';
            sub_filter ':8093' '';
            sub_filter ':4040' '';

            # Enable response rewriting
            proxy_set_header Accept-Encoding "";
        }
    }

    # Spark Data Processor UI
    server {
        listen 80;
        server_name processor.localhost;

        # In debug mode, no redirection to /jobs/ - keep root access
        location = / {
            set $upstream_processor data-processor;
            proxy_pass http://$upstream_processor:4040/;
        }

        location / {
            set $upstream_processor data-processor;
            proxy_pass http://$upstream_processor:4040;

            # Redirect internal service names to external URLs
            sub_filter 'http://spark-master:' 'http://spark.localhost';
            sub_filter 'http://spark-worker-1:' 'http://worker-1.localhost';
            sub_filter 'http://spark-worker-2:' 'http://worker-2.localhost';
            sub_filter 'http://spark-worker-3:' 'http://worker-3.localhost';
            sub_filter 'http://data-processor:' 'http://processor.localhost';

            # Special case for data-processor
            sub_filter 'http://data-processor:4040' 'http://processor.localhost';

            # Completely removed for debug mode - don't allow redirection to /jobs/
            # The following prevents direct redirection

            # Catch HTML attributes and other link variants
            sub_filter 'href="http://data-processor:4040/' 'href="http://processor.localhost/';
            sub_filter 'href="http://data-processor:4040"' 'href="http://processor.localhost"';

            # Remove ports from all URLs
            sub_filter ':8090' '';
            sub_filter ':8091' '';
            sub_filter ':8092' '';
            sub_filter ':8093' '';
            sub_filter ':4040' '';

            # Fix for static resources
            sub_filter 'href="//' 'href="/';
            sub_filter 'src="//' 'src="/';

            # Enable response rewriting
            proxy_set_header Accept-Encoding "";
        }
    }

    # Kafka UI
    server {
        listen 80;
        server_name kafka.localhost;

        location / {
            set $upstream_kafka_ui kafka-ui;
            proxy_pass http://$upstream_kafka_ui:8080;
        }
    }

    # Port redirections for direct port access
    # 8090 → spark.localhost
    server {
        listen 8090;
        server_name _;
        return 301 http://spark.localhost$request_uri;
    }

    # 8091 → worker-1.localhost
    server {
        listen 8091;
        server_name _;
        return 301 http://worker-1.localhost$request_uri;
    }

    # 8092 → worker-2.localhost
    server {
        listen 8092;
        server_name _;
        return 301 http://worker-2.localhost$request_uri;
    }

    # 8093 → worker-3.localhost
    server {
        listen 8093;
        server_name _;
        return 301 http://worker-3.localhost$request_uri;
    }

    # 4040 → processor.localhost
    server {
        listen 4040;
        server_name _;
        return 301 http://processor.localhost$request_uri;
    }

    # 8080 → kafka.localhost
    server {
        listen 8080;
        server_name _;
        return 301 http://kafka.localhost$request_uri;
    }

    # 3000 → metrics.localhost
    server {
        listen 3000;
        server_name _;
        return 301 http://metrics.localhost$request_uri;
    }

    # Default server - displays information about the platform
    server {
        listen 80 default_server;

        location / {
            return 200 'Real-time Data Platform (DEBUG MODE) is ready!
Available Services:
- Grafana Dashboard: http://metrics.localhost
- Spark Master UI: http://spark.localhost
- Spark Worker 1 UI: http://worker-1.localhost
- Spark Worker 2 UI: http://worker-2.localhost
- Spark Worker 3 UI: http://worker-3.localhost
- Data Processor UI: http://processor.localhost
- Kafka UI: http://kafka.localhost';
            add_header Content-Type text/plain;
        }
    }
}